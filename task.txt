Objective
Develop a forecasting model to forecast 10-second-ahead implied volatility for QCoin. Your solution should demonstrate proficiency in time series forecasting, feature engineering with financial market data, and quantitative analysis techniques relevant to cryptocurrency trading.

Where to Start
    Perform Initial Analysis: Conduct exploratory data analysis to identify patterns and relationships in the provided datasets

Functional Requirements

    Data exploration and Feature Engineering: Document & Explore data, Create & preprocess features from order book data, OHLCV data, and cross-asset signals that could predict volatility
    Model Development: Model the implied volatility of QCoin using relevant features
    Prediction Generation: Produce t+10 second (10 second ahead) implied volatility predictions for the entire test dataset
    Performance Evaluation: Calculate and report model performance through plots and relevant metrics. Create a clear plot comparing predicted vs. actual volatility values for the test set.

Technical Requirements

    Data Handling: Process high-frequency data (1-second resolution) efficiently within Kaggle's computational limits
    Model Validation: Use proper time series cross-validation techniques
    Code Quality: Well-structured, commented code following best practices
    Documentation: Comprehensive explanation of methodology and results in your Kaggle notebook
    Submission Format: Generate predictions in the required CSV format for Kaggle submission

Bonus Features

    Advanced Models: Implement sophisticated time series models (LSTM, Transformer)
    Real-time Considerations: Discuss considerations like latency, accuracy and computational constraints for live trading
    Trading Strategy: Discuss a trading strategy based on your volatility predictions in a short report at the end of notebook.
    Feature Importance Analysis: Provide insights into which features drive volatility predictions

Submission Guidelines

    Provide a 1 page report or video describing your approach (keep it to your original thoughts/ approaches).
    Document any assumptions made and libraries used in your README file or notebook documentation.
    Additional Requirements:
           Submit a detailed Kaggle notebook with clear explanations of each method
           Provide CSV file with predictions in Kaggle's required format: `timestamp,predicted`
           Include well-labeled plots comparing predicted vs. true IV values
           Explain how your model could be used in a real trading environment

Evaluation Criteria

    Code Quality and Organization: Clean, well-documented, and reproducible code in Kaggle environment
    Feature Engineering Creativity: Innovative and meaningful feature creation from market data
    Model Performance: Accuracy of predictions as measured by RMSPE on Kaggle leaderboard
    Technical Implementation: Proper handling of time series data and validation techniques
    Business Understanding: Demonstration of practical knowledge of market microstructure, volatility, etc.
    Documentation and Presentation: Clear explanation of methodology and results in notebook format

Performance Metric: Your model will be evaluated using Pearson Correlation Score

OHLCV:  for coin (1-second resolution)
Order Book Snapshots: Up to 10 levels of bids/asks with price and size
Peer Crypto OHLCV: Spot data for related assets
Implied Volatility Labels: Ground truth 10-second IV (training data only)